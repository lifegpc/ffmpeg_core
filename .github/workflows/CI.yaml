name: CI
on: [push, pull_request, workflow_dispatch]
jobs:
  mingw-x64-debug:
    runs-on: windows-2019
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - name: Check Out
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: true
    - name: Setup MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        install: >-
          base-devel
          git
          p7zip
          mingw64/mingw-w64-x86_64-bzip2
          mingw64/mingw-w64-x86_64-cmake
          mingw64/mingw-w64-x86_64-gcc
          mingw64/mingw-w64-x86_64-diffutils
          mingw64/mingw-w64-x86_64-nasm
          mingw64/mingw-w64-x86_64-pkg-config
          mingw64/mingw-w64-x86_64-zlib
          mingw64/mingw-w64-x86_64-libcdio-paranoia
          mingw64/mingw-w64-x86_64-gnutls
          mingw64/mingw-w64-x86_64-egl-headers
    - name: Get Cache Key
      id: cache_key
      shell: cmd
      run: |
        cd scripts
        python get_cache_key.py mingw-x64 SDL2 ffmpeg || exit 1
    - name: Cache
      id: cache
      uses: actions/cache@v3
      with:
        path: clib/
        key: mingw-x64-debug-${{ steps.cache_key.outputs.cache_key }}
    - name: Build SDL2
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        cp scripts/build_SDL2_mingw-x64.sh -v ./ || exit 1
        ./build_SDL2_mingw-x64.sh || exit 1
    - name: Build FFMPEG
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        cp scripts/build_ffmpeg_mingw-x64.sh -v ./ || exit 1
        ./build_ffmpeg_mingw-x64.sh || exit 1
    - name: Build FFMPEG Core
      run: |
        cp scripts/build_ffmpeg_core_mingw-x64-debug.sh -v ./ || exit 1
        ./build_ffmpeg_core_mingw-x64-debug.sh || exit 1
    - name: Download lld-rust
      run: |
        curl -L "https://github.com/lifegpc/ldd-rust/releases/download/v0.0.2/ldd-x86_64-msvc-v0.0.2.7z" -o ldd-x86_64-msvc-v0.0.2.7z || exit 1
        7z e ldd-x86_64-msvc-v0.0.2.7z ldd.exe || exit 1
        mv -v ldd.exe ldd-rust.exe || exit 1
    - name: Pack programs
      env: 
        MSYS2_PATH_TYPE: inherit
      run: |
        export PATH=`pwd`/clib/bin:$PATH
        python scripts/pack_prog.py -o mingw-x64-debug.7z `pwd`/lib/bin/ffmpeg_core.dll || exit 1
    - name: Upload files
      uses: actions/upload-artifact@v3
      with:
        name: mingw-x64-debug
        path: ./mingw-x64-debug.7z
  mingw-x64-wasapi-debug:
    runs-on: windows-2019
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - name: Check Out
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: true
    - name: Setup MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        install: >-
          base-devel
          git
          p7zip
          mingw64/mingw-w64-x86_64-bzip2
          mingw64/mingw-w64-x86_64-cmake
          mingw64/mingw-w64-x86_64-gcc
          mingw64/mingw-w64-x86_64-diffutils
          mingw64/mingw-w64-x86_64-nasm
          mingw64/mingw-w64-x86_64-pkg-config
          mingw64/mingw-w64-x86_64-zlib
          mingw64/mingw-w64-x86_64-libcdio-paranoia
          mingw64/mingw-w64-x86_64-gnutls
          mingw64/mingw-w64-x86_64-egl-headers
    - name: Get Cache Key
      id: cache_key
      shell: cmd
      run: |
        cd scripts
        python get_cache_key.py mingw-x64 SDL2 ffmpeg || exit 1
    - name: Cache
      id: cache
      uses: actions/cache@v3
      with:
        path: clib/
        key: mingw-x64-wasapi-debug-${{ steps.cache_key.outputs.cache_key }}
    - name: Build SDL2
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        cp scripts/build_SDL2_mingw-x64.sh -v ./ || exit 1
        ./build_SDL2_mingw-x64.sh || exit 1
    - name: Build FFMPEG
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        cp scripts/build_ffmpeg_mingw-x64.sh -v ./ || exit 1
        ./build_ffmpeg_mingw-x64.sh || exit 1
    - name: Build FFMPEG Core
      run: |
        cp scripts/build_ffmpeg_core_mingw-x64-wasapi-debug.sh -v ./ || exit 1
        ./build_ffmpeg_core_mingw-x64-wasapi-debug.sh || exit 1
    - name: Download lld-rust
      run: |
        curl -L "https://github.com/lifegpc/ldd-rust/releases/download/v0.0.2/ldd-x86_64-msvc-v0.0.2.7z" -o ldd-x86_64-msvc-v0.0.2.7z || exit 1
        7z e ldd-x86_64-msvc-v0.0.2.7z ldd.exe || exit 1
        mv -v ldd.exe ldd-rust.exe || exit 1
    - name: Pack programs
      env: 
        MSYS2_PATH_TYPE: inherit
      run: |
        export PATH=`pwd`/clib/bin:$PATH
        python scripts/pack_prog.py -o mingw-x64-wasapi-debug.7z `pwd`/lib/bin/ffmpeg_core.dll || exit 1
    - name: Upload files
      uses: actions/upload-artifact@v3
      with:
        name: mingw-x64-wasapi-debug
        path: ./mingw-x64-wasapi-debug.7z
  mingw-x64-release:
    runs-on: windows-2019
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - name: Check Out
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: true
    - name: Setup MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        install: >-
          base-devel
          git
          p7zip
          mingw64/mingw-w64-x86_64-bzip2
          mingw64/mingw-w64-x86_64-cmake
          mingw64/mingw-w64-x86_64-gcc
          mingw64/mingw-w64-x86_64-diffutils
          mingw64/mingw-w64-x86_64-nasm
          mingw64/mingw-w64-x86_64-pkg-config
          mingw64/mingw-w64-x86_64-zlib
          mingw64/mingw-w64-x86_64-libcdio-paranoia
          mingw64/mingw-w64-x86_64-gnutls
          mingw64/mingw-w64-x86_64-egl-headers
    - name: Get Cache Key
      id: cache_key
      shell: cmd
      run: |
        cd scripts
        python get_cache_key.py mingw-x64 SDL2 ffmpeg || exit 1
    - name: Cache
      id: cache
      uses: actions/cache@v3
      with:
        path: clib/
        key: mingw-x64-release-${{ steps.cache_key.outputs.cache_key }}
    - name: Build SDL2
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        cp scripts/build_SDL2_mingw-x64.sh -v ./ || exit 1
        ./build_SDL2_mingw-x64.sh || exit 1
    - name: Build FFMPEG
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        cp scripts/build_ffmpeg_mingw-x64.sh -v ./ || exit 1
        ./build_ffmpeg_mingw-x64.sh || exit 1
    - name: Build FFMPEG Core
      run: |
        cp scripts/build_ffmpeg_core_mingw-x64-release.sh -v ./ || exit 1
        ./build_ffmpeg_core_mingw-x64-release.sh || exit 1
    - name: Download lld-rust
      run: |
        curl -L "https://github.com/lifegpc/ldd-rust/releases/download/v0.0.2/ldd-x86_64-msvc-v0.0.2.7z" -o ldd-x86_64-msvc-v0.0.2.7z || exit 1
        7z e ldd-x86_64-msvc-v0.0.2.7z ldd.exe || exit 1
        mv -v ldd.exe ldd-rust.exe || exit 1
    - name: Pack programs
      env: 
        MSYS2_PATH_TYPE: inherit
      run: |
        export PATH=`pwd`/clib/bin:$PATH
        python scripts/pack_prog.py -s -o mingw-x64-release.7z `pwd`/lib/bin/ffmpeg_core.dll || exit 1
    - name: Upload files
      uses: actions/upload-artifact@v3
      with:
        name: mingw-x64-release
        path: ./mingw-x64-release.7z
  mingw-x64-wasapi-release:
    runs-on: windows-2019
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - name: Check Out
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: true
    - name: Setup MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        install: >-
          base-devel
          git
          p7zip
          mingw64/mingw-w64-x86_64-bzip2
          mingw64/mingw-w64-x86_64-cmake
          mingw64/mingw-w64-x86_64-gcc
          mingw64/mingw-w64-x86_64-diffutils
          mingw64/mingw-w64-x86_64-nasm
          mingw64/mingw-w64-x86_64-pkg-config
          mingw64/mingw-w64-x86_64-zlib
          mingw64/mingw-w64-x86_64-libcdio-paranoia
          mingw64/mingw-w64-x86_64-gnutls
          mingw64/mingw-w64-x86_64-egl-headers
    - name: Get Cache Key
      id: cache_key
      shell: cmd
      run: |
        cd scripts
        python get_cache_key.py mingw-x64 SDL2 ffmpeg || exit 1
    - name: Cache
      id: cache
      uses: actions/cache@v3
      with:
        path: clib/
        key: mingw-x64-wasapi-release-${{ steps.cache_key.outputs.cache_key }}
    - name: Build SDL2
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        cp scripts/build_SDL2_mingw-x64.sh -v ./ || exit 1
        ./build_SDL2_mingw-x64.sh || exit 1
    - name: Build FFMPEG
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        cp scripts/build_ffmpeg_mingw-x64.sh -v ./ || exit 1
        ./build_ffmpeg_mingw-x64.sh || exit 1
    - name: Build FFMPEG Core
      run: |
        cp scripts/build_ffmpeg_core_mingw-x64-wasapi-release.sh -v ./ || exit 1
        ./build_ffmpeg_core_mingw-x64-wasapi-release.sh || exit 1
    - name: Download lld-rust
      run: |
        curl -L "https://github.com/lifegpc/ldd-rust/releases/download/v0.0.2/ldd-x86_64-msvc-v0.0.2.7z" -o ldd-x86_64-msvc-v0.0.2.7z || exit 1
        7z e ldd-x86_64-msvc-v0.0.2.7z ldd.exe || exit 1
        mv -v ldd.exe ldd-rust.exe || exit 1
    - name: Pack programs
      env: 
        MSYS2_PATH_TYPE: inherit
      run: |
        export PATH=`pwd`/clib/bin:$PATH
        python scripts/pack_prog.py -s -o mingw-x64-wasapi-release.7z `pwd`/lib/bin/ffmpeg_core.dll || exit 1
    - name: Upload files
      uses: actions/upload-artifact@v3
      with:
        name: mingw-x64-wasapi-release
        path: ./mingw-x64-wasapi-release.7z
  mingw-x86-debug:
    runs-on: windows-2019
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - name: Check Out
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: true
    - name: Setup MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW32
        update: true
        install: >-
          base-devel
          git
          p7zip
          mingw32/mingw-w64-i686-bzip2
          mingw32/mingw-w64-i686-cmake
          mingw32/mingw-w64-i686-gcc
          mingw32/mingw-w64-i686-diffutils
          mingw32/mingw-w64-i686-nasm
          mingw32/mingw-w64-i686-pkg-config
          mingw32/mingw-w64-i686-zlib
          mingw32/mingw-w64-i686-libcdio-paranoia
          mingw32/mingw-w64-i686-gnutls
          mingw32/mingw-w64-i686-egl-headers
    - name: Get Cache Key
      id: cache_key
      shell: cmd
      run: |
        cd scripts
        python get_cache_key.py mingw-x64 SDL2 ffmpeg || exit 1
    - name: Cache
      id: cache
      uses: actions/cache@v3
      with:
        path: clib/
        key: mingw-x86-debug-${{ steps.cache_key.outputs.cache_key }}
    - name: Build SDL2
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        cp scripts/build_SDL2_mingw-x64.sh -v ./ || exit 1
        ./build_SDL2_mingw-x64.sh || exit 1
    - name: Build FFMPEG
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        cp scripts/build_ffmpeg_mingw-x64.sh -v ./ || exit 1
        ./build_ffmpeg_mingw-x64.sh || exit 1
    - name: Build FFMPEG Core
      run: |
        cp scripts/build_ffmpeg_core_mingw-x64-debug.sh -v ./ || exit 1
        ./build_ffmpeg_core_mingw-x64-debug.sh || exit 1
    - name: Download lld-rust
      run: |
        curl -L "https://github.com/lifegpc/ldd-rust/releases/download/v0.0.2/ldd-x86_64-msvc-v0.0.2.7z" -o ldd-x86_64-msvc-v0.0.2.7z || exit 1
        7z e ldd-x86_64-msvc-v0.0.2.7z ldd.exe || exit 1
        mv -v ldd.exe ldd-rust.exe || exit 1
    - name: Pack programs
      env: 
        MSYS2_PATH_TYPE: inherit
      run: |
        export PATH=`pwd`/clib/bin:$PATH
        python scripts/pack_prog.py -o mingw-x86-debug.7z `pwd`/lib/bin/ffmpeg_core.dll || exit 1
    - name: Upload files
      uses: actions/upload-artifact@v3
      with:
        name: mingw-x86-debug
        path: ./mingw-x86-debug.7z
  mingw-x86-wasapi-debug:
    runs-on: windows-2019
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - name: Check Out
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: true
    - name: Setup MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW32
        update: true
        install: >-
          base-devel
          git
          p7zip
          mingw32/mingw-w64-i686-bzip2
          mingw32/mingw-w64-i686-cmake
          mingw32/mingw-w64-i686-gcc
          mingw32/mingw-w64-i686-diffutils
          mingw32/mingw-w64-i686-nasm
          mingw32/mingw-w64-i686-pkg-config
          mingw32/mingw-w64-i686-zlib
          mingw32/mingw-w64-i686-libcdio-paranoia
          mingw32/mingw-w64-i686-gnutls
          mingw32/mingw-w64-i686-egl-headers
    - name: Get Cache Key
      id: cache_key
      shell: cmd
      run: |
        cd scripts
        python get_cache_key.py mingw-x64 SDL2 ffmpeg || exit 1
    - name: Cache
      id: cache
      uses: actions/cache@v3
      with:
        path: clib/
        key: mingw-x86-wasapi-debug-${{ steps.cache_key.outputs.cache_key }}
    - name: Build SDL2
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        cp scripts/build_SDL2_mingw-x64.sh -v ./ || exit 1
        ./build_SDL2_mingw-x64.sh || exit 1
    - name: Build FFMPEG
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        cp scripts/build_ffmpeg_mingw-x64.sh -v ./ || exit 1
        ./build_ffmpeg_mingw-x64.sh || exit 1
    - name: Build FFMPEG Core
      run: |
        cp scripts/build_ffmpeg_core_mingw-x64-wasapi-debug.sh -v ./ || exit 1
        ./build_ffmpeg_core_mingw-x64-wasapi-debug.sh || exit 1
    - name: Download lld-rust
      run: |
        curl -L "https://github.com/lifegpc/ldd-rust/releases/download/v0.0.2/ldd-x86_64-msvc-v0.0.2.7z" -o ldd-x86_64-msvc-v0.0.2.7z || exit 1
        7z e ldd-x86_64-msvc-v0.0.2.7z ldd.exe || exit 1
        mv -v ldd.exe ldd-rust.exe || exit 1
    - name: Pack programs
      env: 
        MSYS2_PATH_TYPE: inherit
      run: |
        export PATH=`pwd`/clib/bin:$PATH
        python scripts/pack_prog.py -o mingw-x86-wasapi-debug.7z `pwd`/lib/bin/ffmpeg_core.dll || exit 1
    - name: Upload files
      uses: actions/upload-artifact@v3
      with:
        name: mingw-x86-wasapi-debug
        path: ./mingw-x86-wasapi-debug.7z
  mingw-x86-release:
    runs-on: windows-2019
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - name: Check Out
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: true
    - name: Setup MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW32
        update: true
        install: >-
          base-devel
          git
          p7zip
          mingw32/mingw-w64-i686-bzip2
          mingw32/mingw-w64-i686-cmake
          mingw32/mingw-w64-i686-gcc
          mingw32/mingw-w64-i686-diffutils
          mingw32/mingw-w64-i686-nasm
          mingw32/mingw-w64-i686-pkg-config
          mingw32/mingw-w64-i686-zlib
          mingw32/mingw-w64-i686-libcdio-paranoia
          mingw32/mingw-w64-i686-gnutls
          mingw32/mingw-w64-i686-egl-headers
    - name: Get Cache Key
      id: cache_key
      shell: cmd
      run: |
        cd scripts
        python get_cache_key.py mingw-x64 SDL2 ffmpeg || exit 1
    - name: Cache
      id: cache
      uses: actions/cache@v3
      with:
        path: clib/
        key: mingw-x86-release-${{ steps.cache_key.outputs.cache_key }}
    - name: Build SDL2
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        cp scripts/build_SDL2_mingw-x64.sh -v ./ || exit 1
        ./build_SDL2_mingw-x64.sh || exit 1
    - name: Build FFMPEG
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        cp scripts/build_ffmpeg_mingw-x64.sh -v ./ || exit 1
        ./build_ffmpeg_mingw-x64.sh || exit 1
    - name: Build FFMPEG Core
      run: |
        cp scripts/build_ffmpeg_core_mingw-x64-release.sh -v ./ || exit 1
        ./build_ffmpeg_core_mingw-x64-release.sh || exit 1
    - name: Download lld-rust
      run: |
        curl -L "https://github.com/lifegpc/ldd-rust/releases/download/v0.0.2/ldd-x86_64-msvc-v0.0.2.7z" -o ldd-x86_64-msvc-v0.0.2.7z || exit 1
        7z e ldd-x86_64-msvc-v0.0.2.7z ldd.exe || exit 1
        mv -v ldd.exe ldd-rust.exe || exit 1
    - name: Pack programs
      env: 
        MSYS2_PATH_TYPE: inherit
      run: |
        export PATH=`pwd`/clib/bin:$PATH
        python scripts/pack_prog.py -s -o mingw-x86-release.7z `pwd`/lib/bin/ffmpeg_core.dll || exit 1
    - name: Upload files
      uses: actions/upload-artifact@v3
      with:
        name: mingw-x86-release
        path: ./mingw-x86-release.7z
  mingw-x86-wasapi-release:
    runs-on: windows-2019
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - name: Check Out
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: true
    - name: Setup MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW32
        update: true
        install: >-
          base-devel
          git
          p7zip
          mingw32/mingw-w64-i686-bzip2
          mingw32/mingw-w64-i686-cmake
          mingw32/mingw-w64-i686-gcc
          mingw32/mingw-w64-i686-diffutils
          mingw32/mingw-w64-i686-nasm
          mingw32/mingw-w64-i686-pkg-config
          mingw32/mingw-w64-i686-zlib
          mingw32/mingw-w64-i686-libcdio-paranoia
          mingw32/mingw-w64-i686-gnutls
          mingw32/mingw-w64-i686-egl-headers
    - name: Get Cache Key
      id: cache_key
      shell: cmd
      run: |
        cd scripts
        python get_cache_key.py mingw-x64 SDL2 ffmpeg || exit 1
    - name: Cache
      id: cache
      uses: actions/cache@v3
      with:
        path: clib/
        key: mingw-x86-wasapi-release-${{ steps.cache_key.outputs.cache_key }}
    - name: Build SDL2
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        cp scripts/build_SDL2_mingw-x64.sh -v ./ || exit 1
        ./build_SDL2_mingw-x64.sh || exit 1
    - name: Build FFMPEG
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        cp scripts/build_ffmpeg_mingw-x64.sh -v ./ || exit 1
        ./build_ffmpeg_mingw-x64.sh || exit 1
    - name: Build FFMPEG Core
      run: |
        cp scripts/build_ffmpeg_core_mingw-x64-wasapi-release.sh -v ./ || exit 1
        ./build_ffmpeg_core_mingw-x64-wasapi-release.sh || exit 1
    - name: Download lld-rust
      run: |
        curl -L "https://github.com/lifegpc/ldd-rust/releases/download/v0.0.2/ldd-x86_64-msvc-v0.0.2.7z" -o ldd-x86_64-msvc-v0.0.2.7z || exit 1
        7z e ldd-x86_64-msvc-v0.0.2.7z ldd.exe || exit 1
        mv -v ldd.exe ldd-rust.exe || exit 1
    - name: Pack programs
      env: 
        MSYS2_PATH_TYPE: inherit
      run: |
        export PATH=`pwd`/clib/bin:$PATH
        python scripts/pack_prog.py -s -o mingw-x86-wasapi-release.7z `pwd`/lib/bin/ffmpeg_core.dll || exit 1
    - name: Upload files
      uses: actions/upload-artifact@v3
      with:
        name: mingw-x86-wasapi-release
        path: ./mingw-x86-wasapi-release.7z
  msvc-x64-debug:
    runs-on: windows-2022
    defaults:
      run:
        shell: cmd
    steps:
    - name: Check Out
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: true
    - name: Get Cache Key
      id: cache_key
      shell: cmd
      run: |
        cd scripts
        python get_cache_key.py msvc-x64 zlib bzlib gnutls cdio cdio-paranoia pkgconf SDL2 ffmpeg || exit 1
    - name: Cache
      id: cache
      uses: actions/cache@v3
      with:
        path: clib/
        key: msvc-x64-debug-${{ steps.cache_key.outputs.cache_key }}
    - name: Install Meson and Ninja
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        python -m pip install --upgrade meson ninja
    - name: Setup CL
      if: steps.cache.outputs.cache-hit != 'true'
      uses: ilammy/msvc-dev-cmd@v1
    - name: Set up NASM
      if: steps.cache.outputs.cache-hit != 'true'
      uses: ilammy/setup-nasm@v1
    - name: Setup MSYS2
      if: steps.cache.outputs.cache-hit != 'true'
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        install: >-
          base-devel
    - name: Build zlib
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        COPY /Y scripts\build_zlib_msvc-x64.bat || exit 1
        CALL build_zlib_msvc-x64.bat || exit 1
    - name: Build bzlib
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        COPY /Y scripts\build_bzlib_msvc-x64.bat || exit 1
        CALL build_bzlib_msvc-x64.bat || exit 1
    - name: Download gnutls
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        COPY /Y scripts\download_gnutls_msvc-x64.bat || exit 1
        CALL download_gnutls_msvc-x64.bat || exit 1
    - name: Download libcdio
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        COPY /Y scripts\download_cdio_msvc-x64.bat || exit 1
        CALL scripts\download_cdio_msvc-x64.bat || exit 1
        COPY /Y scripts\download_cdio-paranoia_msvc-x64.bat || exit 1
        CALL download_cdio-paranoia_msvc-x64.bat || exit 1
    - name: Build pkgconf
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        COPY /Y scripts\build_pkgconf_msvc-x64.bat || exit 1
        CALL build_pkgconf_msvc-x64.bat || exit 1
    - name: Build SDL2
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        COPY /Y scripts\build_SDL2_msvc-x64.bat || exit 1
        CALL build_SDL2_msvc-x64.bat || exit 1
    - name: Build FFMPEG
      if: steps.cache.outputs.cache-hit != 'true'
      shell: msys2 {0}
      env:
        MSYS2_PATH_TYPE: inherit
      run: |
        cp scripts/build_ffmpeg_msvc-x64.sh -v ./ || exit 1
        ./build_ffmpeg_msvc-x64.sh || exit 1
    - name: Build FFMPEG Core
      run: |
        COPY /Y scripts\build_ffmpeg_core_msvc-x64-debug.bat || exit 1
        CALL build_ffmpeg_core_msvc-x64-debug.bat || exit 1
    - name: Download lld-rust
      run: |
        COPY /Y scripts\download_lld-rust.bat || exit 1
        download_lld-rust || exit 1
    - name: Pack programs
      run: |
        SET PATH=%CD%\clib\bin;%PATH%
        python scripts/pack_prog.py -o msvc-x64-debug.7z %CD%\lib\bin\ffmpeg_core.dll || exit 1
        python scripts/pack_prog.py -o msvc-x64-debug-pdb.7z -p %CD%\lib\bin\ffmpeg_core.dll || exit 1
    - name: Upload files
      uses: actions/upload-artifact@v3
      with:
        name: msvc-x64-debug
        path: ./msvc-x64-debug.7z
    - name: Upload PDB files
      uses: actions/upload-artifact@v3
      with:
        name: msvc-x64-debug-pdb
        path: ./msvc-x64-debug-pdb.7z
  msvc-x64-release:
    runs-on: windows-2022
    defaults:
      run:
        shell: cmd
    steps:
    - name: Check Out
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: true
    - name: Get Cache Key
      id: cache_key
      shell: cmd
      run: |
        cd scripts
        python get_cache_key.py msvc-x64 zlib bzlib gnutls cdio cdio-paranoia pkgconf SDL2 ffmpeg || exit 1
    - name: Cache
      id: cache
      uses: actions/cache@v3
      with:
        path: clib/
        key: msvc-x64-release-${{ steps.cache_key.outputs.cache_key }}
    - name: Install Meson and Ninja
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        python -m pip install --upgrade meson ninja
    - name: Setup CL
      if: steps.cache.outputs.cache-hit != 'true'
      uses: ilammy/msvc-dev-cmd@v1
    - name: Set up NASM
      if: steps.cache.outputs.cache-hit != 'true'
      uses: ilammy/setup-nasm@v1
    - name: Setup MSYS2
      if: steps.cache.outputs.cache-hit != 'true'
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        install: >-
          base-devel
    - name: Build zlib
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        COPY /Y scripts\build_zlib_msvc-x64.bat || exit 1
        CALL build_zlib_msvc-x64.bat || exit 1
    - name: Build bzlib
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        COPY /Y scripts\build_bzlib_msvc-x64.bat || exit 1
        CALL build_bzlib_msvc-x64.bat || exit 1
    - name: Download gnutls
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        COPY /Y scripts\download_gnutls_msvc-x64.bat || exit 1
        CALL download_gnutls_msvc-x64.bat || exit 1
    - name: Download libcdio
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        COPY /Y scripts\download_cdio_msvc-x64.bat || exit 1
        CALL scripts\download_cdio_msvc-x64.bat || exit 1
        COPY /Y scripts\download_cdio-paranoia_msvc-x64.bat || exit 1
        CALL download_cdio-paranoia_msvc-x64.bat || exit 1
    - name: Build pkgconf
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        COPY /Y scripts\build_pkgconf_msvc-x64.bat || exit 1
        CALL build_pkgconf_msvc-x64.bat || exit 1
    - name: Build SDL2
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        COPY /Y scripts\build_SDL2_msvc-x64.bat || exit 1
        CALL build_SDL2_msvc-x64.bat || exit 1
    - name: Build FFMPEG
      if: steps.cache.outputs.cache-hit != 'true'
      shell: msys2 {0}
      env:
        MSYS2_PATH_TYPE: inherit
      run: |
        cp scripts/build_ffmpeg_msvc-x64.sh -v ./ || exit 1
        ./build_ffmpeg_msvc-x64.sh || exit 1
    - name: Build FFMPEG Core
      run: |
        COPY /Y scripts\build_ffmpeg_core_msvc-x64-release.bat || exit 1
        CALL build_ffmpeg_core_msvc-x64-release.bat || exit 1
    - name: Download lld-rust
      run: |
        COPY /Y scripts\download_lld-rust.bat || exit 1
        download_lld-rust || exit 1
    - name: Pack programs
      run: |
        SET PATH=%CD%\clib\bin;%PATH%
        python scripts/pack_prog.py -o msvc-x64-release.7z %CD%\lib\bin\ffmpeg_core.dll || exit 1
        python scripts/pack_prog.py -o msvc-x64-release-pdb.7z -p %CD%\lib\bin\ffmpeg_core.dll || exit 1
    - name: Upload files
      uses: actions/upload-artifact@v3
      with:
        name: msvc-x64-release
        path: ./msvc-x64-release.7z
    - name: Upload PDB files
      uses: actions/upload-artifact@v3
      with:
        name: msvc-x64-release-pdb
        path: ./msvc-x64-release-pdb.7z
  msvc-x64-wasapi-debug:
    runs-on: windows-2022
    defaults:
      run:
        shell: cmd
    steps:
    - name: Check Out
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: true
    - name: Get Cache Key
      id: cache_key
      shell: cmd
      run: |
        cd scripts
        python get_cache_key.py msvc-x64 zlib bzlib gnutls cdio cdio-paranoia pkgconf SDL2 ffmpeg || exit 1
    - name: Cache
      id: cache
      uses: actions/cache@v3
      with:
        path: clib/
        key: msvc-x64-wasapi-debug-${{ steps.cache_key.outputs.cache_key }}
    - name: Install Meson and Ninja
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        python -m pip install --upgrade meson ninja
    - name: Setup CL
      if: steps.cache.outputs.cache-hit != 'true'
      uses: ilammy/msvc-dev-cmd@v1
    - name: Set up NASM
      if: steps.cache.outputs.cache-hit != 'true'
      uses: ilammy/setup-nasm@v1
    - name: Setup MSYS2
      if: steps.cache.outputs.cache-hit != 'true'
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        install: >-
          base-devel
    - name: Build zlib
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        COPY /Y scripts\build_zlib_msvc-x64.bat || exit 1
        CALL build_zlib_msvc-x64.bat || exit 1
    - name: Build bzlib
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        COPY /Y scripts\build_bzlib_msvc-x64.bat || exit 1
        CALL build_bzlib_msvc-x64.bat || exit 1
    - name: Download gnutls
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        COPY /Y scripts\download_gnutls_msvc-x64.bat || exit 1
        CALL download_gnutls_msvc-x64.bat || exit 1
    - name: Download libcdio
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        COPY /Y scripts\download_cdio_msvc-x64.bat || exit 1
        CALL scripts\download_cdio_msvc-x64.bat || exit 1
        COPY /Y scripts\download_cdio-paranoia_msvc-x64.bat || exit 1
        CALL download_cdio-paranoia_msvc-x64.bat || exit 1
    - name: Build pkgconf
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        COPY /Y scripts\build_pkgconf_msvc-x64.bat || exit 1
        CALL build_pkgconf_msvc-x64.bat || exit 1
    - name: Build SDL2
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        COPY /Y scripts\build_SDL2_msvc-x64.bat || exit 1
        CALL build_SDL2_msvc-x64.bat || exit 1
    - name: Build FFMPEG
      if: steps.cache.outputs.cache-hit != 'true'
      shell: msys2 {0}
      env:
        MSYS2_PATH_TYPE: inherit
      run: |
        cp scripts/build_ffmpeg_msvc-x64.sh -v ./ || exit 1
        ./build_ffmpeg_msvc-x64.sh || exit 1
    - name: Build FFMPEG Core
      run: |
        COPY /Y scripts\build_ffmpeg_core_msvc-x64-wasapi-debug.bat || exit 1
        CALL build_ffmpeg_core_msvc-x64-wasapi-debug.bat || exit 1
    - name: Download lld-rust
      run: |
        COPY /Y scripts\download_lld-rust.bat || exit 1
        download_lld-rust || exit 1
    - name: Pack programs
      run: |
        SET PATH=%CD%\clib\bin;%PATH%
        python scripts/pack_prog.py -o msvc-x64-wasapi-debug.7z %CD%\lib\bin\ffmpeg_core.dll || exit 1
        python scripts/pack_prog.py -o msvc-x64-wasapi-debug-pdb.7z -p %CD%\lib\bin\ffmpeg_core.dll || exit 1
    - name: Upload files
      uses: actions/upload-artifact@v3
      with:
        name: msvc-x64-wasapi-debug
        path: ./msvc-x64-wasapi-debug.7z
    - name: Upload PDB files
      uses: actions/upload-artifact@v3
      with:
        name: msvc-x64-wasapi-debug-pdb
        path: ./msvc-x64-wasapi-debug-pdb.7z
  msvc-x64-wasapi-release:
    runs-on: windows-2022
    defaults:
      run:
        shell: cmd
    steps:
    - name: Check Out
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: true
    - name: Get Cache Key
      id: cache_key
      shell: cmd
      run: |
        cd scripts
        python get_cache_key.py msvc-x64 zlib bzlib gnutls cdio cdio-paranoia pkgconf SDL2 ffmpeg || exit 1
    - name: Cache
      id: cache
      uses: actions/cache@v3
      with:
        path: clib/
        key: msvc-x64-wasapi-release-${{ steps.cache_key.outputs.cache_key }}
    - name: Install Meson and Ninja
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        python -m pip install --upgrade meson ninja
    - name: Setup CL
      if: steps.cache.outputs.cache-hit != 'true'
      uses: ilammy/msvc-dev-cmd@v1
    - name: Set up NASM
      if: steps.cache.outputs.cache-hit != 'true'
      uses: ilammy/setup-nasm@v1
    - name: Setup MSYS2
      if: steps.cache.outputs.cache-hit != 'true'
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        install: >-
          base-devel
    - name: Build zlib
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        COPY /Y scripts\build_zlib_msvc-x64.bat || exit 1
        CALL build_zlib_msvc-x64.bat || exit 1
    - name: Build bzlib
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        COPY /Y scripts\build_bzlib_msvc-x64.bat || exit 1
        CALL build_bzlib_msvc-x64.bat || exit 1
    - name: Download gnutls
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        COPY /Y scripts\download_gnutls_msvc-x64.bat || exit 1
        CALL download_gnutls_msvc-x64.bat || exit 1
    - name: Download libcdio
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        COPY /Y scripts\download_cdio_msvc-x64.bat || exit 1
        CALL scripts\download_cdio_msvc-x64.bat || exit 1
        COPY /Y scripts\download_cdio-paranoia_msvc-x64.bat || exit 1
        CALL download_cdio-paranoia_msvc-x64.bat || exit 1
    - name: Build pkgconf
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        COPY /Y scripts\build_pkgconf_msvc-x64.bat || exit 1
        CALL build_pkgconf_msvc-x64.bat || exit 1
    - name: Build SDL2
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        COPY /Y scripts\build_SDL2_msvc-x64.bat || exit 1
        CALL build_SDL2_msvc-x64.bat || exit 1
    - name: Build FFMPEG
      if: steps.cache.outputs.cache-hit != 'true'
      shell: msys2 {0}
      env:
        MSYS2_PATH_TYPE: inherit
      run: |
        cp scripts/build_ffmpeg_msvc-x64.sh -v ./ || exit 1
        ./build_ffmpeg_msvc-x64.sh || exit 1
    - name: Build FFMPEG Core
      run: |
        COPY /Y scripts\build_ffmpeg_core_msvc-x64-wasapi-release.bat || exit 1
        CALL build_ffmpeg_core_msvc-x64-wasapi-release.bat || exit 1
    - name: Download lld-rust
      run: |
        COPY /Y scripts\download_lld-rust.bat || exit 1
        download_lld-rust || exit 1
    - name: Pack programs
      run: |
        SET PATH=%CD%\clib\bin;%PATH%
        python scripts/pack_prog.py -o msvc-x64-wasapi-release.7z %CD%\lib\bin\ffmpeg_core.dll || exit 1
        python scripts/pack_prog.py -o msvc-x64-wasapi-release-pdb.7z -p %CD%\lib\bin\ffmpeg_core.dll || exit 1
    - name: Upload files
      uses: actions/upload-artifact@v3
      with:
        name: msvc-x64-wasapi-release
        path: ./msvc-x64-wasapi-release.7z
    - name: Upload PDB files
      uses: actions/upload-artifact@v3
      with:
        name: msvc-x64-wasapi-release-pdb
        path: ./msvc-x64-wasapi-release-pdb.7z
